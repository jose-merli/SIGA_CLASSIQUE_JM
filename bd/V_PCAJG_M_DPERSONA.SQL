CREATE OR REPLACE VIEW V_PCAJG_M_DPERSONA AS
SELECT
      PER.IDINSTITUCION
      , PER.IDPERSONA
      , LEN.IDLENGUAJE
      , PER.IDREPRESENTANTEJG
      , PER.TIPOPERSONAJG AS TIPOPERSONA_CDA--FISICA F JURIDICA J SEGUN MAIL DE JORDI DEL 16/07/2011
      , DECODE(PER.IDTIPOIDENTIFICACION, NULL, (SELECT P.CODIGO || '##' || P.DESCRIPCION || '##' || P.ABREVIATURA
                                         FROM PCAJG_TIPO_IDENTIFICACION P
                                         WHERE P.IDINSTITUCION = PER.IDINSTITUCION
                                         AND P.IDENTIFICADOR = -1)
                         , DECODE(PER.NIF, NULL, DECODE(PER.IDINSTITUCION, 2023, 'I', 'NID'), (SELECT P.CODIGO || '##' || P.DESCRIPCION || '##' || P.ABREVIATURA
                       FROM PCAJG_TIPO_IDENTIFICACION P, PCAJG_TIPO_IDENTIFICACION_CENT PS
                       WHERE P.IDENTIFICADOR = PS.IDENTIFICADOR
                        AND P.IDINSTITUCION = PS.IDINSTITUCION
                        AND PS.IDTIPOIDENTIFICACION = PER.IDTIPOIDENTIFICACION
                        AND PS.IDINSTITUCION = PER.IDINSTITUCION))) AS TIPOIDENTIFICACION_CDA
      , (SELECT TI.CODIGOEJIS FROM CEN_TIPOIDENTIFICACION TI WHERE TI.IDTIPOIDENTIFICACION = PER.IDTIPOIDENTIFICACION) AS TIPOIDENTIFICACION_EJIS
      , PER.NIF AS IDENTIFICACION
      , DECODE(PER.TIPOPERSONAJG, 'J', NULL, SUBSTR(PER.NOMBRE, 1, 50)) AS NOMBRE
      , DECODE(PER.TIPOPERSONAJG, 'J', NULL, PER.APELLIDO1) AS PRIMERAPELLIDO
      , DECODE(PER.TIPOPERSONAJG, 'J', NULL, PER.APELLIDO2) AS SEGUNDOAPELLIDO
      , DECODE(PER.TIPOPERSONAJG, 'J', (PER.NOMBRE || DECODE(PER.APELLIDO1, NULL, '', (' ' || PER.APELLIDO1))), NULL) AS RAZONSOCIAL
      , (CASE PER.TIPOPERSONAJG
            WHEN 'J'
            THEN NULL
            ELSE PER.FECHANACIMIENTO
            END) AS FECHANACIMIENTO
--      , DECODE(PER.TIPOPERSONAJG, 'J', NULL, PER.FECHANACIMIENTO) AS FECHANACIMIENTO
	  , (CASE
			WHEN PER.TIPOPERSONAJG = 'J'
			THEN NULL
			WHEN I.CEN_INST_IDINSTITUCION IN (3003, 3004)
			THEN (NAC.CODIGOEXT || '##' || f_siga_getrecurso(NAC.NOMBRE, LEN.IDLENGUAJE))
			ELSE (TO_NUMBER(NAC.CODIGOEXT) || '##' || f_siga_getrecurso(NAC.NOMBRE, LEN.IDLENGUAJE))
			END) AS NACIONALIDAD_CDA
      , NULL AS PROFESION_CDA
--      , DECODE(PER.TIPOPERSONAJG, 'J', NULL, (PROF.CODIGOEXT || '##' || F_SIGA_GETRECURSO(PROF.DESCRIPCION, LEN.IDLENGUAJE))) AS PROFESION_CDA
      , DECODE(PER.TIPOPERSONAJG, 'J', NULL, (SELECT P.CODIGO
               FROM PCAJG_SEXO P, PCAJG_SEXO_S_SEXO PS
               WHERE P.IDENTIFICADOR = PS.IDENTIFICADOR
                AND P.IDINSTITUCION = PS.IDINSTITUCION
                AND PS.IDSEXO = PER.SEXO
                AND PS.IDINSTITUCION = PER.IDINSTITUCION)) AS SEXO
      , PER.SEXO AS SEXO_EJIS
      , DECODE((SELECT L.CODIGOEXT FROM ADM_LENGUAJES L WHERE L.IDLENGUAJE = PER.IDLENGUAJE), 'ES', 'ES', 'CA') AS IDIOMACOMUNICACION
      , DECODE(PER.TIPOPERSONAJG, 'J', NULL, (SELECT EC.CODIGOEXT || '##' || F_SIGA_GETRECURSO(EC.DESCRIPCION, LEN.IDLENGUAJE)
                FROM CEN_ESTADOCIVIL EC WHERE EC.IDESTADOCIVIL = PER.IDESTADOCIVIL)) AS ESTADOCIVIL_CDA
	  , DECODE(PER.TIPOPERSONAJG, 'J', NULL, (SELECT EC.CODIGOEJIS || '##' || F_SIGA_GETRECURSO(EC.DESCRIPCION, LEN.IDLENGUAJE)
                FROM CEN_ESTADOCIVIL EC WHERE EC.IDESTADOCIVIL = PER.IDESTADOCIVIL)) AS ESTADOCIVIL_EJIS
      , DECODE(PER.TIPOPERSONAJG, 'J', NULL, (SELECT P.CODIGO || '##' || P.DESCRIPCION || '##' || P.ABREVIATURA
               FROM PCAJG_REGIMEN_CONYUGAL P, PCAJG_REGIMEN_CONY_S_REGCONY PS
               WHERE P.IDENTIFICADOR = PS.IDENTIFICADOR
                AND P.IDINSTITUCION = PS.IDINSTITUCION
                AND PS.IDREGIMENCONYUGAL = PER.REGIMEN_CONYUGAL
                AND PS.IDINSTITUCION = PER.IDINSTITUCION)) AS REGIMENECONOMICO_CDA
      , DECODE(PER.REGIMEN_CONYUGAL, 'G', 'BG', 'S', 'SB', NULL) AS REGIMENECONOMICO_EJIS
      , PER.NUMEROHIJOS AS NUMHIJOS
      , DECODE(PER.TIPOPERSONAJG, 'J', PER.FECHANACIMIENTO, NULL) AS FECHAFORMALIZACION --LP 20100525
      , NULL AS TIPOPERSONAJURIDICA_CDA --NO EXISTE INFORMACION EN SIGA
      --Datos domicilio
      , (SELECT P.CODIGO || '##' || P.DESCRIPCION || '##' || P.ABREVIATURA
                FROM PCAJG_TIPO_DOMICILIO P
                WHERE P.IDINSTITUCION = PER.IDINSTITUCION
                AND P.IDENTIFICADOR = (DECODE(PER.DIRECCION, NULL, 1, 3))) AS TIPODOMICILIO_CDA --3	Comunicaciones	COMUNICA
      , DECODE(PER.DIRECCION, NULL, 'SINDOM', 'COMUNICA') AS TIPODOMICILIO_EJIS
      , NULL AS TIPOVIA_CDA
      , NVL(PER.DIRECCION, DECODE(LEN.IDLENGUAJE, 2, 'Indeterminat', 'Indeterminado')) AS NOMBREVIA
      , PER.NUMERODIR AS NUMERODIRECCION
      , PER.ESCALERADIR AS ESCALERADIRECCION
      , PER.PISODIR AS PISODIRECCION
      , PER.PUERTADIR AS PUERTADIRECCION
      , TO_NUMBER(PAIS.CODIGOEXT) || '##' || F_SIGA_GETRECURSO(PAIS.NOMBRE, LEN.IDLENGUAJE) AS PAIS_CDA
      , PROV.CODIGOEXT || '##' || PROV.NOMBRE AS PROVINCIA_CDA
      , (CASE WHEN PER.IDPOBLACION IS NULL
              THEN NULL
              WHEN EXISTS (SELECT 1 FROM CEN_POBLACIONES POB WHERE POB.IDPOBLACION = PER.IDPOBLACION AND PER.IDPOBLACION = POB.IDPOBLACIONMUNICIPIO)--ES MUNICIPIO
              THEN (SELECT (SUBSTR(POB.CODIGOEXT, 1, 5) || '##' || POB.NOMBRE) FROM CEN_POBLACIONES POB WHERE POB.IDPOBLACION = PER.IDPOBLACION)
              WHEN EXISTS (SELECT 1 FROM CEN_POBLACIONES POB WHERE POB.IDPOBLACION = PER.IDPOBLACION AND PER.IDPOBLACION <> POB.IDPOBLACIONMUNICIPIO)--ES POBLACION
              THEN (SELECT ('-2##' || POB.NOMBRE) FROM CEN_POBLACIONES POB WHERE POB.IDPOBLACION = PER.IDPOBLACION)
              END) AS MUNICIPIO_CDA
	    , (CASE WHEN PER.IDPOBLACION IS NULL
              THEN NULL
              ELSE (SELECT (SUBSTR(POB.CODIGOEXT, 1, 5) || '##' || POB.NOMBRE) FROM CEN_POBLACIONES POB WHERE POB.IDPOBLACION = PER.IDPOBLACION)
              END) AS MUNICIPIO_EJIS
      , (CASE WHEN PER.IDPOBLACION IS NULL
              THEN NULL
              WHEN EXISTS (SELECT 1 FROM CEN_POBLACIONES POB WHERE POB.IDPOBLACION = PER.IDPOBLACION AND PER.IDPOBLACION = POB.IDPOBLACIONMUNICIPIO)--ES MUNICIPIO
              THEN '00'
              WHEN EXISTS (SELECT 1 FROM CEN_POBLACIONES POB WHERE POB.IDPOBLACION = PER.IDPOBLACION AND PER.IDPOBLACION <> POB.IDPOBLACIONMUNICIPIO)--ES POBLACION
              THEN NULL
              END) AS SUBCODIGOMUNICIPIO
      , PER.CODIGOPOSTAL AS CODIGOPOSTAL
      --Datos contacto
      , SUBSTR(F_SIGA_GETTELEFONOPERSONAJG(PER.IDINSTITUCION, PER.IDPERSONA, 1), 0, 15) AS NUMEROTELEFONO1
      --, F_SIGA_GETTELEFONOPERSONAJG(PER.IDINSTITUCION, PER.IDPERSONA, 1) AS NUMEROTELEFONO1
      , F_SIGA_GETTELEFONOPERSONAJG(PER.IDINSTITUCION, PER.IDPERSONA, 2) AS NUMEROTELEFONO2
      , NULL AS EMAIL --NO EXISTE INFORMACION EN SIGA
      , PER.AUTORIZAAVISOTELEMATICO AS AUTORIZAAVISOTELEMATICO
FROM
     SCS_PERSONAJG PER
     , SCS_PROFESION PROF
     , CEN_PAIS NAC
     , CEN_PROVINCIAS PROV
     , CEN_PAIS PAIS
     , ADM_LENGUAJES LEN
     , CEN_INSTITUCION I
WHERE
     PER.IDPROFESION = PROF.IDPROFESION(+)
     AND PER.IDPAIS = NAC.IDPAIS(+)
     AND PER.IDPROVINCIA = PROV.IDPROVINCIA(+)
     AND PROV.IDPAIS = PAIS.IDPAIS(+)
     AND PER.IDINSTITUCION = I.IDINSTITUCION;